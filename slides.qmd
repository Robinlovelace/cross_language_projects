---
title: Deploying cross-language in high impact projects
format: 
  revealjs: default
  clean-revealjs:
    self-contained: true
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
author:
  - name: Robin Lovelace
    orcid: 0000-0001-5679-6536
    email: rob00 x at gmail dot com
    affiliations: University of Leeds, Active Travel England
date: last-modified
bibliography: references.bib
---


# Introduction

## Contents

- Introduction
- Approaches to cross-language interoperability
- Containerisation
- Cross-language pain points
- Cross-language priorities

## Case study for reference

:::: columns

::: {.column width="50%"}

The Network Planning Tool for Scotland

- Development version (branch `dev`): [nptscot.github.io](https://nptscot.github.io/)
- Stable version (branch `production`): [www.npt.scot](https://www.npt.scot/)

:::

::: {.column width="50%"}

![The NPT web app](/images/basemaps.png)


:::

::::

## NPT stack

:::: columns
::: {.column}
Backend: R + targets for 'cross-language' data pipeline workflow automation

- Relies on Rust crates
- Experiments with Python

Frontend: JS + MapLibre for visualisation

Progressive Web App (PWA)
:::
::: {.column}
![Map controls](/images/map_controls.png)
:::
::::

## User interface

![Layer Controls](/images/layer_controls.png)

## Definitions

### "Deploying"

- Code runs on more than one computer
- Results are published on a website that is maintained
- Project is "in production"
  - Users: Hosted on a trusted and well-used website
  - Performance: updates to 'production' planned and documented
  - Money changing hands
  - Expectations

## Deploying the NPT

TODO: add screenshot of NPT branches?

## Deployment workflow of NPT

## "High impact projects"

- Broadly: tangible change results from the work
  - With measurable impact on environmental, social (or economic?) outcomes
    - E.g. Reduction in greenhouse gas emissions
    <!-- (accounting for 'rebound' effects) -->
    - E.g. better diets resulting in more DALYs 
    <!-- (disability-adjusted life years) -->
  - Identifiable 'pathway to impact'
    - E.g. New methods -> new evidence -> investment in active travel more effective that it would have been otherwise -> more people cycling -> tangible benefits

## Technical requirements for impact


- The results are in production product has users

## Why cross-language projects?

-   a
-   b
-   c

## ...

``` sh
quarto install extension grantmcdermott/quarto-revealjs-clean
```

Then replace:

```         
format: 
  revealjs: default
```

with:

```         
format: 
  clean-revealjs:
    self-contained: true
```

In the YAML header of your `.qmd` file.

# Publishing

## Setting-up `gh-pages` branch

You can do this with a single quarto command:

``` sh
quarto publish gh-pages
```

Which leads to the following text and eventually auto-opens the deployed webiste!

![](images/paste-4.png)

## The website

The previous command creates a `gh-pages` branch with the slides in the `docs` folder.
This is then automatically deployed to GitHub Pages, and the website is opened in your browser when ready:

![](images/paste-5.png)

How awesome is that?

### ðŸ¤¯ðŸ¤¯ðŸ¤¯

## Debugging

Source of `quarto publish gh-pages` hint: [Error message from GitHub Actions](https://github.com/Robinlovelace/reproducible-slides-repo-template/actions/runs/10860601182/job/30141397336#step:4:34) when trying to publish slides to GitHub Pages:

```         
ERROR: Unable to publish to GitHub Pages (the remote origin does not have a branch named "gh-pages". Use first `quarto publish gh-pages` locally to initialize the remote repository for publishing.)
```

![](images/paste-3.png)

# Adding citations {background-color="#40666e"}

## With the Quarto extension

-   You need to be in Visual Editor mode (Ctrl+Shift+F4)
-   Then it's Ctrl+Shift+F8

![](images/paste-2.png)

Creates citations like this: [@peng2011]

## With "Citation Picker for Zotero" extension

-   Issue with this approach: doesn't generate the .bib file

![](images/paste-1.png)

Alt+Shift+Z

## Support in IDEs

![](images/paste-6.png)

# References